Food Detector: Codelet que analisa o ambiente e carrega o memory object com a lista dos ítens de comida.
Closest Food Detector: Codelet que determina qual é o ítem de comida mais próximo da criatura.
Jewel Detector: Codelet que analisa o ambiente e carrega o memory object com a lista das jóias do ambiente.
Leaflet Jewel Detector: Codelet que determina qual é a próxima jóia que a criature deve procurar no ambiente de acordo com a especificação dos leaflets.
Closest Obstacle Detector: Codelet que analisa o ambiente e carrega o memory object com o objeto mais próximo da criatura.
Leaflets Done Detector: Codelet que analisa se todas as jóias do leaflet foram coletadas.
At Delivery Spot Detector: Codelet que analisa se a criatura está nas proximidades do Delivery Spot.

- Codelets Comportamentais:

Go To Closest Food: Codelet que instrui a criatura a se movimentar na direção do ítem de comida mais próximo utilizando a arquitetura de subsumption, no caso do combustível da criatura estar com um nível inferior a 40% do total.
Go To Leaflet Jewel: Codelet que instrui a criatura a se movimentar na direção da jóia do leaflet utilizando a arquitetura de subsumption.
Go To Delivery Spot: Codelet que instrui a criatura a se movimentar na direção do Delivery Spot.
Eat Closest Food: Codelet que instrui a criatura a consumir um ítem de comida.
Pickup Jewel: Codelet que instrui a criatura a coletar uma jóia do ambiente conforme especificado nos leaflets.
Remove Obstacle: Codelet que detecta quando um obstáculo está próximo da criatura, e determina sua remoção se não for uma jóia dos leaflets.
Deliver Leaflets: Codelet que executa a entrega das jóias dos leaflets.
Wander: Codelet que executa um giro no ambiente quando nenhuma outra ação motora for cabível.

- Codelets Motores:

Apenas alterado o codelet de movimentação das pernas, para utilizar a saída do Memory Container.

O diagrama abaixo ilustra o relacionamento dos memory objects e codelets desta solução:

-- figura 1.

Descrição da Implementação - A2

