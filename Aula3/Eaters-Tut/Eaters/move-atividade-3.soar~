######################### Move-to-food operator ############################
# Modified for:
# 1. The agent will not get stuck if there is no food available.
# 2. Not to come back to the same position after one move.
# 3. Jump operation

# Initialize directions in working memory
sp {initialize*state*directions
   (state <ss> ^type state)
-->
   (<ss> ^directions <n> <e> <s> <w>)
   (<n> ^value north ^opposite south)
   (<s> ^value south ^opposite north)
   (<e> ^value east ^opposite west)
   (<w> ^value west ^opposite east)}

# Propose*move-to-food
# If there is normalfood or bonusfood in an adjacent cell,
# propose move-to-food in the direction of that cell
# and indicate that this operator can be selected randomly.
sp {propose*move-to-food
   (state <s> ^io.input-link.my-location.<dir>.content
                 { <content> <> wall })
-->
   (<s> ^operator <o> + =)
   (<o> ^name move-to-food
        ^direction <dir>
        ^content <content>)}

sp {propose*move-no-backward
   (state <s> ^io.input-link.my-location.<dir>.content
              { <co> <> wall }
              ^directions <d>
             -^last-direction <o-dir>)
   (<d> ^value <dir>
        ^opposite <o-dir>)
-->
   (<s> ^operator <o>  +=)
   (<o> ^name move
        ^direction <dir>
        ^content <co>)}
   
sp {select*move*reject*backward
   (state <s> ^operator <o> +
              ^directions <d>
              ^last-direction <dir>)
   (<d> ^value <dir>
        ^opposite <o-dir>)
   (<o> ^name move
        ^direction <o-dir>)
-->
   (<s> ^operator <o> -)}
   
# Apply*move-to-food
# If the move-to-food operator for a direction is selected,
# generate an output command to move in that direction.
sp {apply-move-to-food
   (state <s> ^io.output-link <out>
              ^operator <o>)
   (<o> ^name move-to-food
        ^direction <dir>)
-->
   (<out> ^move.direction <dir>)}

# Apply*move-to-food*remove-move
# If the move-to-food operator is selected,
# and there is a completed move command on the output link,
# then remove that command.
sp {apply*move-to-food*remove-move
   (state <s> ^io.output-link <out>
              ^operator.name move-to-food)
   (<out> ^move <move>)
   (<move> ^status complete)
--> 
   (<out> ^move <move> -)}

sp {monitor*move-to-food
   (state <s> ^operator <o>)
   (<o> ^name move-to-food
        ^direction <direction>)
-->
   (write |Direction: | <direction>)}


# Apply*move*create*last-direction
# If the move operator for a direction is selected,
# create an augmentation called last-direction with that direction.
sp {apply*move*create*last-direction
   (state <s> ^operator <o>)
   (<o> ^name move
        ^direction <direction>)
-->
   (<s> ^last-direction <direction>)}


# Apply*move*remove*last-direction
# If the move operator for a direction is selected,
# and the last-direction is not equal to that direction,
# then remove the last-direction.
sp {apply*move*remove*last-direction
   (state <s> ^operator <o>
              ^last-direction <direction>)
   (<o> ^direction <> <direction>
        ^name move)
-->
   (<s> ^last-direction <direction> -)}
