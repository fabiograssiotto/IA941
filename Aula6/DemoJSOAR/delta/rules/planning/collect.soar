################ COLLECT ENTITIES ##############################################
# This operator will make the agent collect the entities, even if not in memory.
sp {propose*collect
   (state <s> ^name planning
              ^io.input-link <il>)
   (<il> ^CREATURE.SENSOR <sensor>)
   (<sensor> ^VISUAL <visual>)
   (<visual> ^ENTITY <entity>)
   (<entity> ^NAME <entityName>)
   (<entity> ^DISTANCE <DISTANCE> < 30)
   (<entity> ^COLOR <entityColor>)
   (<entity> ^TYPE JEWEL)
-->
   (<s> ^operator <o> +)
   (<o> ^name collect)
   (<o> ^parameter <p>)
   (<p> ^NAME <entityName>)
   (<p> ^COLOR <entityColor>)
   (<p> ^DISTANCE <DISTANCE>)
   (write (crlf) | propose*collect: name = | <entityName> | distance = | <DISTANCE>)}

# Collect the entity
sp {apply*collect
   (state <s> ^operator <o>
              ^io.input-link <il>
              ^io.output-link <ol>)
   (<o> ^name collect)
   (<o> ^parameter.NAME <entityName>)
   (<o> ^parameter.COLOR <entityColor>)
   (<il> ^CREATURE <creature>)
   (<creature> ^SENSOR.VISUAL <visual>)
   (<visual> ^ENTITY <visualEntity>)
   (<visualEntity> ^NAME <entityName>)
   (<visualEntity> ^COLOR <entityColor>)
  -(<ol> ^GET <something>)
--> 
   (<ol> ^GET <command>)
   (<command> ^Name <entityName>)
   (<command> ^Color <entityColor>)
   (write (crlf) | apply*collect |)
   (write (crlf) | thing to get: | <entityName>)
   (write (crlf) | color to get: | <entityColor>)}


# Apply*collect*remove:
# If the collect operator is selected,
# and there is a completed get command on the output link,
# then remove that command.   
sp {apply*collect*remove
    (state <s> ^operator <o>            
               ^io.output-link <out>)
    (<o> ^name collect)
    (<o> ^parameter.name <jewelName>)
    (<out> ^GET <move>)
    (<move> ^status complete)
-->
    (<out> ^GET <move> -)}  