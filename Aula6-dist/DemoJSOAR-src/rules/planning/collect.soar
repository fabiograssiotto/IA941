################ COLLECT ENTITIES ###################################
# This operator will make the agent collect the entities, either storing
# to the knapsack or consuming food.
sp {propose*collect
   (state <s> ^name planning
              ^io.input-link <il>
              ^io.output-link <ol>
              ^target <target>
              ^sack <sack>)
   (<il> ^CREATURE.MEMORY <memory>)
   (<memory> ^ENTITY.NAME <entityName>)
   (<memory> ^ENTITY.DISTANCE <distance> < 60)
-->
   (<s> ^operator <o> +)
   (<o> ^name collect)
   (<o> ^parameter <p>)
   (<p> ^NAME <entityName>)
   (write (crlf) | propose*collect: name = | <entityName> | distance = | <distance>)}

sp {apply*collect   
   (state <s> ^operator <o>
              ^io.input-link <il>
              ^io.output-link <ol>
              ^sack <sack>
              ^target <target>)
   (<o> ^name collect)
   (<o> ^parameter.NAME <thingToGet>)
   (<il> ^CREATURE <creature>)
   (<creature> ^SENSOR.VISUAL <visual>)
   (<creature> ^MEMORY <memory>)  
   (<memory> ^ENTITY <memoryEntity>)
   (<memoryEntity> ^COLOR <color>)
   (<sack> ^<color> <sackQty>
           ^Red <sRedAmmount>
           ^Green <sGreenAmmount>
           ^Blue <sBlueAmmount>
           ^Yellow <sYellowAmmount>
           ^Magenta <sMagentaAmmount>
           ^White <sWhiteAmmount>)
   (<target> ^<color> <tgtQty> 
             ^Red <tRedAmmount>
             ^Green <tGreenAmmount>
             ^Blue <tBlueAmmount>
             ^Yellow <tYellowAmmount>
             ^Magenta <tMagentaAmmount>
             ^White <tWhiteAmmount>)
-->
   (<ol> ^GET <command>)
   (<command> ^Name <thingToGet>)
   (<memory> ^ENTITY <memoryEntity> -) # Remove entity from memory
   (<visual> ^ENTITY <visualEntity> -) # Remove entity from visual record
   (<sack> ^<color> <sackQty> -) # Update knapsack quantity
   (<sack> ^<color> (+ <sackQty> 1))
   (<target> ^<color> <tgtQty> -)
   (<target> ^<color> (- <tgtQty> 1))
   (write (crlf) | apply*collect |)
   (write (crlf) | thing to get: | <thingToGet>)
   (write (crlf) | Target Jewels = Red: | <tRedAmmount> | Green: | <tGreenAmmount> | Blue: | <tBlueAmmount> )
   (write (crlf) |                 Yellow: | <tYellowAmmount> | Magenta: | <tMagentaAmmount> | White: | <tWhiteAmmount> )
   (write (crlf) | Sack Jewels = Red: | <sRedAmmount> | Green: | <sGreenAmmount> | Blue: | <sBlueAmmount> )
   (write (crlf) |               Yellow: | <sYellowAmmount> | Magenta: | <sMagentaAmmount> | White: | <sWhiteAmmount> )}


# Apply*collect*remove:
# If the collect operator is selected,
# and there is a completed get command on the output link,
# then remove that command.   
sp {apply*collect*remove
    (state <s> ^operator <o>            
               ^io.output-link <out>)
    (<o> ^name collect)
    (<o> ^parameter.name <jewelName>)
    (<out> ^GET <move>)
    (<move> ^status complete)
-->
    (<out> ^GET <move> -)}  




